version: 2.1

aliases:
  restore-go-cache: &restore-go-cache
    - restore_cache:
        name: Restore Go Vendor Cache
        key: v{{ checksum "cache.version" }}-go-vendor-{{ checksum "Gopkg.lock" }}
  restore-yarn-cache: &restore-yarn-cache
    - restore_cache:
        name: Restore Go Vendor Cache
        key: v{{ checksum "cache.version" }}-go-vendor-{{ checksum "Gopkg.lock" }}
  save-go-cache: &save-go-cache
    - save_cache:
        name: Save Go Vendor Cache
        key: v{{ checksum "cache.version" }}-go-vendor-{{ checksum "Gopkg.lock" }}
        paths:
          - ./vendor
  save-yarn-cache: &save-yarn-cache
    - save_cache:
        name: Save Yarn Package Cache
        key: v{{ checksum "cache.version" }}-yarn-vendor-{{ checksum "yarn.lock" }}
        paths:
          - /usr/local/share/.cache/yarn

commands:
  if-changed:
    parameters:
      folder:
        type: string
        default: "core"
      command:
        type: string
    steps:
      - run: ./tools/ci/if_changed << parameters.folder >> "<< parameters.command >>"
  dep-ensure:
    steps:
      - if-changed:
          folder: "core"
          command: "dep ensure -vendor-only"

jobs:
  go-sqlite:
    working_directory: /go/src/github.com/smartcontractkit/chainlink
    docker:
      - image: smartcontract/builder:1.0.18
    steps:
      - checkout
      - run: echo $CACHE_VERSION > cache.version
      - <<: *restore-go-cache
      - dep-ensure
      - <<: *save-go-cache
      - if-changed:
          command: ./tools/ci/init_gcloud
      - if-changed:
          command: ./tools/ci/go_test
  go-sqlite-race:
    working_directory: /go/src/github.com/smartcontractkit/chainlink
    docker:
      - image: smartcontract/builder:1.0.18
    steps:
      - checkout
      - run: echo $CACHE_VERSION > cache.version
      - <<: *restore-go-cache
      - dep-ensure
      - <<: *save-go-cache
      - if-changed:
          command: ./tools/ci/init_gcloud
      - if-changed:
          command: ./tools/ci/gorace_test
  go-postgres:
    working_directory: /go/src/github.com/smartcontractkit/chainlink
    docker:
      - image: smartcontract/builder:1.0.18
      - image: circleci/postgres:11-alpine
        environment:
          POSTGRES_USER: circleci_postgres
          POSTGRES_DB: circleci_test
    environment:
      DATABASE_URL: postgres://circleci_postgres@localhost:5432/circleci_test?sslmode=disable
    steps:
      - checkout
      - run: echo $CACHE_VERSION > cache.version
      - <<: *restore-go-cache
      - dep-ensure
      - <<: *save-go-cache
      - if-changed:
          command: ./tools/ci/go_single_threaded_test
  rust:
    working_directory: /go/src/github.com/smartcontractkit/chainlink
    docker:
      - image: smartcontract/builder:1.0.18
    steps:
      - checkout
      - run: echo $CACHE_VERSION > cache.version
      - <<: *restore-go-cache
      - dep-ensure
      - <<: *save-go-cache
      - if-changed:
          command: ./tools/ci/rust_test
  sgx:
    working_directory: /go/src/github.com/smartcontractkit/chainlink
    docker:
      - image: smartcontract/builder:1.0.18
    environment:
      SGX_ENABLED: yes
      # XXX: These are set in the base image but circleci seems to wipe them out
      PATH: "/root/.cargo/bin:/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/sgxsdk/bin:/opt/sgxsdk/bin/x64"
      LD_LIBRARY_PATH: "/opt/sgxsdk/sdk_libs"
      SGX_SDK: "/opt/sgxsdk"
    steps:
      - checkout
      - run: echo $CACHE_VERSION > cache.version
      - <<: *restore-go-cache
      - dep-ensure
      - <<: *save-go-cache
      - if-changed:
          command: make enclave
      - if-changed:
          command: ./tools/ci/sgx_test
  geth-postgres:
    working_directory: /go/src/github.com/smartcontractkit/chainlink
    docker:
      - image: smartcontract/builder:1.0.18
      - image: circleci/postgres:11-alpine
        environment:
          POSTGRES_USER: circleci_postgres
          POSTGRES_DB: circleci_test
    environment:
      DATABASE_URL: postgres://circleci_postgres@localhost:5432/circleci_test?sslmode=disable
    steps:
      - checkout
      - run: echo $CACHE_VERSION > cache.version
      - <<: *restore-go-cache
      - dep-ensure
      - <<: *save-go-cache
      - if-changed:
          command: ./tools/ci/ethereum_test
  parity-postgres:
    working_directory: /go/src/github.com/smartcontractkit/chainlink
    docker:
      - image: smartcontract/builder:1.0.18
      - image: circleci/postgres:11-alpine
        environment:
          POSTGRES_USER: circleci_postgres
          POSTGRES_DB: circleci_test
      - image: smartcontract/devnet:latest
    environment:
      DATABASE_URL: postgres://circleci_postgres@localhost:5432/circleci_test?sslmode=disable
      ETH_WS_PORT: 8546
      ETH_HTTP_PORT: 8545
      MIN_OUTGOING_CONFIRMATIONS: 1
    steps:
      - checkout
      - run: echo $CACHE_VERSION > cache.version
      - <<: *restore-go-cache
      - dep-ensure
      - <<: *save-go-cache
      - if-changed:
          command: ./tools/ci/ethereum_test parity
  truffle:
    working_directory: /go/src/github.com/smartcontractkit/chainlink
    docker:
      - image: smartcontract/builder:1.0.18
    steps:
      - checkout
      - run: echo $CACHE_VERSION > cache.version
      - <<: *restore-yarn-cache
      - if-changed:
          folder: evm
          command: yarn install
      - <<: *save-yarn-cache
      - if-changed:
          folder: evm
          command: ./tools/ci/truffle_test
  operator-ui:
    working_directory: /go/src/github.com/smartcontractkit/chainlink
    docker:
      - image: smartcontract/builder:1.0.18
    steps:
      - checkout
      - run: echo $CACHE_VERSION > cache.version
      - <<: *restore-yarn-cache
      - if-changed:
          folder: operator_ui
          command: yarn install
      - <<: *save-yarn-cache
      - if-changed:
          folder: operator_ui
          command: ./tools/ci/init_gcloud
      - if-changed:
          folder: operator_ui
          command: ./tools/ci/operator-ui_test
  reportcoverage:
    docker:
      - image: smartcontract/builder:1.0.18
    steps:
      - checkout
      - if-changed:
          command: ./tools/ci/init_gcloud
      - if-changed:
          command: ./tools/ci/report_coverage
  deploy:
    docker:
      - image: smartcontract/deployer:latest
    environment:
      ENVIRONMENT: release
      DOCKER_TAG: staging
    steps:
      - checkout
      - run: ./tools/ci/init_gcloud
      - setup_remote_docker
      - run: echo $DOCKERHUB_PASS | docker login -u $DOCKERHUB_USER --password-stdin
      - run: make docker
      - run: make dockerpush
      - run: |
          docker inspect --format='{{index .RepoDigests 0}}' "smartcontract/chainlink:staging" \
            | awk -F'@' '{print$2}' \
            | xargs -I'%' kubectl set image deployment.apps/chainlink-deploy \
                "chainlink=smartcontract/chainlink:staging@%"

workflows:
  version: 2
  test:
    jobs:
      - go-sqlite
      - go-sqlite-race
      - go-postgres
      - truffle
      - geth-postgres
      - parity-postgres
      - operator-ui
      - rust
      - sgx
      - reportcoverage:
          requires:
            - go-sqlite
            - operator-ui
      - deploy:
          requires:
            - go-sqlite
            - go-sqlite-race
            - go-postgres
            - truffle
            - geth-postgres
            - parity-postgres
            - operator-ui
          filters:
            branches:
              only: master
